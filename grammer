
//  S->functionC
//  C->S|e
//  function->type identifier(argument_list){code_block}
//  argument_list->type identifier _argument_list|e
//  _argument_list->, identifier _argument_list|e
//  code_block->sentence;code_block|for_expr code_block|while_expr code_block|if_expr code_block|ret code_block|e
//  sentence->equal|statement|e
//  statement->type identifier X
//  X->,identifier X|e
//  equal->identifier = calcu_expr
//  calcu_expr->iden_or_func _calcu_expr|num _calcu_expr
//  _calcu_expr->operator iden_or_func _calcu_expr|operator num _calcu_expr|e
//  iden_or_func->identifier func
//  func->(real_argument_list)|e
//  real_argument_list->calcu_expr _real_argument_list|e
//  _real_argument_list->,calcu_expr _real_argument_list|e
//  for_expr->(calcu_expr|e;logical_expr;calcu_expr|e){code_block}
//  while_expr->(logical_expr){code_block}
//  if_expr->if(logical_expr){code_block}|if(logical_expr)else if_expr|if(logical_expr)else{code_block}
//  ret->return calcu_expr;|return ;
// 
